{"ast":null,"code":"const initialState = {\n  messageDetails: {}\n};\n\nconst messagesReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'MESSAGES_LOADED':\n      const {\n        conversationId,\n        messages,\n        hasMoreMessages,\n        lastMessageId\n      } = action.payload;\n      const currentConversationMapEntry = state.messageDetails[conversationId];\n      const newConversationMapEntry = {\n        hasMoreMessages,\n        lastMessageId,\n        messages: []\n      };\n\n      if (currentConversationMapEntry) {\n        newConversationMapEntry.messages = [...currentConversationMapEntry.messages];\n      }\n\n      newConversationMapEntry.messages = [...newConversationMapEntry.messages, ...messages];\n      const newMessageDetails = { ...state.messageDetails\n      };\n      newMessageDetails[conversationId] = newConversationMapEntry;\n      return {\n        messageDetails: newMessageDetails\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default messagesReducer;","map":{"version":3,"names":["initialState","messageDetails","messagesReducer","state","action","type","conversationId","messages","hasMoreMessages","lastMessageId","payload","currentConversationMapEntry","newConversationMapEntry","newMessageDetails"],"sources":["C:/Users/LENOVO/Projects/chat-app-react/src/store/reducers/messages.js"],"sourcesContent":["const initialState = {\r\n    messageDetails: {}\r\n}\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'MESSAGES_LOADED':\r\n            const { conversationId, messages, hasMoreMessages, lastMessageId } = action.payload;\r\n            const currentConversationMapEntry = state.messageDetails[conversationId];\r\n            const newConversationMapEntry = { hasMoreMessages, lastMessageId, messages: [] };\r\n\r\n            if (currentConversationMapEntry) {\r\n                newConversationMapEntry.messages = [...currentConversationMapEntry.messages];\r\n            }\r\n\r\n            newConversationMapEntry.messages = [...newConversationMapEntry.messages, ...messages];\r\n\r\n            const newMessageDetails = { ...state.messageDetails };\r\n            newMessageDetails[conversationId] = newConversationMapEntry;\r\n\r\n            return { messageDetails: newMessageDetails };\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default messagesReducer;"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,cAAc,EAAE;AADC,CAArB;;AAIA,MAAMC,eAAe,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBH,YAAyB;EAAA,IAAXI,MAAW;;EACtD,QAAOA,MAAM,CAACC,IAAd;IACI,KAAK,iBAAL;MACI,MAAM;QAAEC,cAAF;QAAkBC,QAAlB;QAA4BC,eAA5B;QAA6CC;MAA7C,IAA+DL,MAAM,CAACM,OAA5E;MACA,MAAMC,2BAA2B,GAAGR,KAAK,CAACF,cAAN,CAAqBK,cAArB,CAApC;MACA,MAAMM,uBAAuB,GAAG;QAAEJ,eAAF;QAAmBC,aAAnB;QAAkCF,QAAQ,EAAE;MAA5C,CAAhC;;MAEA,IAAII,2BAAJ,EAAiC;QAC7BC,uBAAuB,CAACL,QAAxB,GAAmC,CAAC,GAAGI,2BAA2B,CAACJ,QAAhC,CAAnC;MACH;;MAEDK,uBAAuB,CAACL,QAAxB,GAAmC,CAAC,GAAGK,uBAAuB,CAACL,QAA5B,EAAsC,GAAGA,QAAzC,CAAnC;MAEA,MAAMM,iBAAiB,GAAG,EAAE,GAAGV,KAAK,CAACF;MAAX,CAA1B;MACAY,iBAAiB,CAACP,cAAD,CAAjB,GAAoCM,uBAApC;MAEA,OAAO;QAAEX,cAAc,EAAEY;MAAlB,CAAP;;IACJ;MACI,OAAOV,KAAP;EAjBR;AAmBH,CApBD;;AAsBA,eAAeD,eAAf"},"metadata":{},"sourceType":"module"}